//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 07/10/2017 9:06:07 a. m.
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace BaseRestauranteContext
{

    [DatabaseAttribute(Name = "baseRestaurante")]
    [ProviderAttribute(typeof(Devart.Data.PostgreSql.Linq.Provider.PgSqlDataProvider))]
    public partial class BaseRestauranteDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(BaseRestauranteDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);

        #endregion

        public BaseRestauranteDataContext() :
        base(GetConnectionString("BaseRestauranteDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public BaseRestauranteDataContext(MappingSource mappingSource) :
        base(GetConnectionString("BaseRestauranteDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public BaseRestauranteDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BaseRestauranteDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BaseRestauranteDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public BaseRestauranteDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

    
        /// <summary>
        /// There are no comments for FMostrarPlatosCalificacion in the schema.
        /// </summary>
        [Function(Name=@"public.f_mostrar_platos_calificacion", IsComposable=true)]
        public System.Linq.IQueryable<FMostrarPlatosCalificacionResult> FMostrarPlatosCalificacion([Parameter(Name="_reserva_id", DbType="INTEGER")] System.Nullable<int> _reserva_id)
        {
            return this.CreateMethodCallQuery<FMostrarPlatosCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _reserva_id);
        }

    
        /// <summary>
        /// There are no comments for FUsuarioNoAsistio in the schema.
        /// </summary>
        [Function(Name=@"public.f_usuario_no_asistio", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FUsuarioNoAsistio([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre);
        }

    
        /// <summary>
        /// There are no comments for FCalcularCalificacion in the schema.
        /// </summary>
        [Function(Name=@"public.f_calcular_calificacion", IsComposable=true)]
        public System.Linq.IQueryable<FCalcularCalificacionResult> FCalcularCalificacion([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_calificacion", DbType="DOUBLE PRECISION")] System.Nullable<double> _calificacion)
        {
            return this.CreateMethodCallQuery<FCalcularCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _calificacion);
        }

    
        /// <summary>
        /// There are no comments for FContacto in the schema.
        /// </summary>
        [Function(Name=@"public.f_contacto", IsComposable=true)]
        public System.Linq.IQueryable<FContactoResult> FContacto([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_email", DbType="CHARACTER VARYING")] string _email, [Parameter(Name="_telefono", DbType="CHARACTER VARYING")] string _telefono, [Parameter(Name="_mensaje", DbType="CHARACTER VARYING")] string _mensaje)
        {
            return this.CreateMethodCallQuery<FContactoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre, _email, _telefono, _mensaje);
        }

    
        /// <summary>
        /// There are no comments for FMostrarTipo in the schema.
        /// </summary>
        [Function(Name=@"public.f_mostrar_tipo", IsComposable=true)]
        public System.Linq.IQueryable<FMostrarTipoResult> FMostrarTipo()
        {
            return this.CreateMethodCallQuery<FMostrarTipoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEliminarPlato in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_platos", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FEliminarPlato([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FMostrarUsuario in the schema.
        /// </summary>
        [Function(Name=@"public.f_mostrar_usuarios", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FMostrarUsuario()
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FPlatosCal1 in the schema.
        /// </summary>
        [Function(Name=@"public.f_platos_cal1", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FPlatosCal1()
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FUsuarioDesbloquear in the schema.
        /// </summary>
        [Function(Name=@"public.f_usuario_desbloquear", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FUsuarioDesbloquear([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
        }

    
        /// <summary>
        /// There are no comments for FLoginseguridad in the schema.
        /// </summary>
        [Function(Name=@"public.f_loginseguridad")]
        public void FLoginseguridad()
        {
            IExecuteResult _FLoginseguridadResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEliminarIngrediente in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_ingredientes", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarIngredienteResult> FEliminarIngrediente([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarIngredienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FInformacion in the schema.
        /// </summary>
        [Function(Name=@"public.f_informacion", IsComposable=true)]
        public System.Linq.IQueryable<FInformacionResult> FInformacion()
        {
            return this.CreateMethodCallQuery<FInformacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FUsuarioSiAsistio in the schema.
        /// </summary>
        [Function(Name=@"public.f_usuario_si_asistio", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FUsuarioSiAsistio([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre);
        }

    
        /// <summary>
        /// There are no comments for FReserva in the schema.
        /// </summary>
        [Function(Name=@"public.f_reservas", IsComposable=true)]
        public System.Linq.IQueryable<FReservaResult> FReserva()
        {
            return this.CreateMethodCallQuery<FReservaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FReservaId in the schema.
        /// </summary>
        [Function(Name=@"public.f_reserva_id", IsComposable=true)]
        public System.Linq.IQueryable<FReservaIdResult> FReservaId([Parameter(Name="_user_id", DbType="INTEGER")] System.Nullable<int> _user_id)
        {
            return this.CreateMethodCallQuery<FReservaIdResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _user_id);
        }

    
        /// <summary>
        /// There are no comments for FMesa in the schema.
        /// </summary>
        [Function(Name=@"public.f_mesas", IsComposable=true)]
        public System.Linq.IQueryable<FMesaResult> FMesa()
        {
            return this.CreateMethodCallQuery<FMesaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FLogincerrar in the schema.
        /// </summary>
        [Function(Name=@"public.f_logincerrar")]
        public void FLogincerrar([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id)
        {
            IExecuteResult _FLogincerrarResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
        }

    
        /// <summary>
        /// There are no comments for FEliminarMesa in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_mesas", IsComposable=true)]
        public System.Linq.IQueryable<FMesaResult> FEliminarMesa([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FMesaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FReservas2 in the schema.
        /// </summary>
        [Function(Name=@"public.f_reservas2", IsComposable=true)]
        public System.Linq.IQueryable<FReservaResult> FReservas2()
        {
            return this.CreateMethodCallQuery<FReservaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FInsertarMesa in the schema.
        /// </summary>
        [Function(Name=@"public.f_insertar_mesas", IsComposable=true)]
        public System.Linq.IQueryable<FMesaResult> FInsertarMesa([Parameter(Name="_sillas", DbType="INTEGER")] System.Nullable<int> _sillas, [Parameter(Name="_estado_mesa", DbType="INTEGER")] System.Nullable<int> _estado_mesa, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FMesaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _sillas, _estado_mesa, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FModificarTipo in the schema.
        /// </summary>
        [Function(Name=@"public.f_modificar_tipo", IsComposable=true)]
        public System.Linq.IQueryable<FMostrarTipoResult> FModificarTipo([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_precio", DbType="INTEGER")] System.Nullable<int> _precio, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FMostrarTipoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre, _precio, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FAlerta in the schema.
        /// </summary>
        [Function(Name=@"public.f_alerta", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarIngredienteResult> FAlerta()
        {
            return this.CreateMethodCallQuery<FEliminarIngredienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FOpcionesPlato in the schema.
        /// </summary>
        [Function(Name=@"public.f_opciones_platos", IsComposable=true)]
        public System.Linq.IQueryable<FOpcionesPlatoResult> FOpcionesPlato([Parameter(Name="_reserva_id", DbType="INTEGER")] System.Nullable<int> _reserva_id)
        {
            return this.CreateMethodCallQuery<FOpcionesPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _reserva_id);
        }

    
        /// <summary>
        /// There are no comments for FClientesCalificacion in the schema.
        /// </summary>
        [Function(Name=@"public.f_clientes_calificacion", IsComposable=true)]
        public System.Linq.IQueryable<FClientesCalificacionResult> FClientesCalificacion([Parameter(Name="_plato_id", DbType="INTEGER")] System.Nullable<int> _plato_id)
        {
            return this.CreateMethodCallQuery<FClientesCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _plato_id);
        }

    
        /// <summary>
        /// There are no comments for FModificarPlato in the schema.
        /// </summary>
        [Function(Name=@"public.f_modificar_platos", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FModificarPlato([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_precio", DbType="INTEGER")] System.Nullable<int> _precio, [Parameter(Name="_descripcion", DbType="CHARACTER VARYING")] string _descripcion, [Parameter(Name="_url_imagen", DbType="CHARACTER VARYING")] string _url_imagen, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _nombre, _precio, _descripcion, _url_imagen, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FEliminarReserva in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_reserva", IsComposable=true)]
        public System.Linq.IQueryable<FCalcularCalificacionResult> FEliminarReserva([Parameter(Name="_reserva", DbType="INTEGER")] System.Nullable<int> _reserva)
        {
            return this.CreateMethodCallQuery<FCalcularCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _reserva);
        }

    
        /// <summary>
        /// There are no comments for FIpMac in the schema.
        /// </summary>
        [Function(Name=@"public.f_ip_mac", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FIpMac([Parameter(Name="_ip", DbType="CHARACTER VARYING")] string _ip, [Parameter(Name="_mac", DbType="CHARACTER VARYING")] string _mac, [Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _ip, _mac, _id, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FInsertarIngrePla in the schema.
        /// </summary>
        [Function(Name=@"public.f_insertar_ingre_pla", IsComposable=true)]
        public System.Linq.IQueryable<FInsertarIngrePlaResult> FInsertarIngrePla([Parameter(Name="_plato_id", DbType="INTEGER")] System.Nullable<int> _plato_id, [Parameter(Name="_ingrediente_id", DbType="CHARACTER VARYING")] string _ingrediente_id, [Parameter(Name="_cantidad", DbType="DOUBLE PRECISION")] System.Nullable<double> _cantidad, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FInsertarIngrePlaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _plato_id, _ingrediente_id, _cantidad, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FLogin in the schema.
        /// </summary>
        [Function(Name=@"public.f_login", IsComposable=true)]
        public System.Linq.IQueryable<FLoginResult> FLogin([Parameter(Name="_username", DbType="CHARACTER VARYING")] string _username, [Parameter(Name="_clave", DbType="CHARACTER VARYING")] string _clave)
        {
            return this.CreateMethodCallQuery<FLoginResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _username, _clave);
        }

    
        /// <summary>
        /// There are no comments for FHacerReserva in the schema.
        /// </summary>
        [Function(Name=@"public.f_hacer_reserva", IsComposable=true)]
        public System.Linq.IQueryable<FCalcularCalificacionResult> FHacerReserva([Parameter(Name="_personas", DbType="INTEGER")] System.Nullable<int> _personas, [Parameter(Name="_hora", DbType="CHARACTER VARYING")] string _hora, [Parameter(Name="_fecha", DbType="DATE")] System.Nullable<System.DateTime> _fecha, [Parameter(Name="_usuario", DbType="INTEGER")] System.Nullable<int> _usuario, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FCalcularCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _personas, _hora, _fecha, _usuario, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FEliminarIngrePla in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_ingre_pla", IsComposable=true)]
        public System.Linq.IQueryable<FInsertarIngrePlaResult> FEliminarIngrePla([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FInsertarIngrePlaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FMostrarMensaje in the schema.
        /// </summary>
        [Function(Name=@"public.f_mostrar_mensajes", IsComposable=true)]
        public System.Linq.IQueryable<FContactoResult> FMostrarMensaje()
        {
            return this.CreateMethodCallQuery<FContactoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FInsertarPlatoReserva in the schema.
        /// </summary>
        [Function(Name=@"public.f_insertar_plato_reserva", IsComposable=true)]
        public System.Linq.IQueryable<FCalcularCalificacionResult> FInsertarPlatoReserva([Parameter(Name="_plato", DbType="INTEGER")] System.Nullable<int> _plato, [Parameter(Name="_reserva", DbType="INTEGER")] System.Nullable<int> _reserva, [Parameter(Name="_precio_unit", DbType="INTEGER")] System.Nullable<int> _precio_unit, [Parameter(Name="_precio", DbType="INTEGER")] System.Nullable<int> _precio, [Parameter(Name="_cantidad", DbType="INTEGER")] System.Nullable<int> _cantidad, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FCalcularCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _plato, _reserva, _precio_unit, _precio, _cantidad, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FOpcionesReserva in the schema.
        /// </summary>
        [Function(Name=@"public.f_opciones_reserva", IsComposable=true)]
        public System.Linq.IQueryable<FOpcionesReservaResult> FOpcionesReserva([Parameter(Name="_user_id", DbType="INTEGER")] System.Nullable<int> _user_id)
        {
            return this.CreateMethodCallQuery<FOpcionesReservaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _user_id);
        }

    
        /// <summary>
        /// There are no comments for FPlatos2 in the schema.
        /// </summary>
        [Function(Name=@"public.f_platos2", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FPlatos2([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id)
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
        }

    
        /// <summary>
        /// There are no comments for FInsertarIngrediente in the schema.
        /// </summary>
        [Function(Name=@"public.f_insertar_ingredientes", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarIngredienteResult> FInsertarIngrediente([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_cantidad", DbType="DOUBLE PRECISION")] System.Nullable<double> _cantidad, [Parameter(Name="_descripcion", DbType="CHARACTER VARYING")] string _descripcion, [Parameter(Name="_minimo", DbType="DOUBLE PRECISION")] System.Nullable<double> _minimo, [Parameter(Name="_unidad", DbType="CHARACTER VARYING")] string _unidad, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarIngredienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre, _cantidad, _descripcion, _minimo, _unidad, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FRegistro in the schema.
        /// </summary>
        [Function(Name=@"public.f_registro", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FRegistro([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_correo", DbType="CHARACTER VARYING")] string _correo, [Parameter(Name="_cedula", DbType="INTEGER")] System.Nullable<int> _cedula, [Parameter(Name="_telefono", DbType="CHARACTER VARYING")] string _telefono, [Parameter(Name="_user_name", DbType="CHARACTER VARYING")] string _user_name, [Parameter(Name="_clave", DbType="CHARACTER VARYING")] string _clave, [Parameter(Name="_rol_id", DbType="INTEGER")] System.Nullable<int> _rol_id, [Parameter(Name="_estado_usuario", DbType="INTEGER")] System.Nullable<int> _estado_usuario, [Parameter(Name="_estado_reserva", DbType="INTEGER")] System.Nullable<int> _estado_reserva)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre, _correo, _cedula, _telefono, _user_name, _clave, _rol_id, _estado_usuario, _estado_reserva);
        }

    
        /// <summary>
        /// There are no comments for FUsuarioDisponible in the schema.
        /// </summary>
        [Function(Name=@"public.f_usuario_disponible", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioDisponibleResult> FUsuarioDisponible([Parameter(Name="_user_name", DbType="CHARACTER VARYING")] string _user_name)
        {
            return this.CreateMethodCallQuery<FUsuarioDisponibleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _user_name);
        }

    
        /// <summary>
        /// There are no comments for FModificarInfo in the schema.
        /// </summary>
        [Function(Name=@"public.f_modificar_info", IsComposable=true)]
        public System.Linq.IQueryable<FInformacionResult> FModificarInfo([Parameter(Name="_nombre_restaurante", DbType="CHARACTER VARYING")] string _nombre_restaurante, [Parameter(Name="_mision", DbType="CHARACTER VARYING")] string _mision, [Parameter(Name="_vision", DbType="CHARACTER VARYING")] string _vision, [Parameter(Name="_quienes", DbType="CHARACTER VARYING")] string _quienes, [Parameter(Name="_eslogan", DbType="CHARACTER VARYING")] string _eslogan, [Parameter(Name="_titulo1", DbType="CHARACTER VARYING")] string _titulo1, [Parameter(Name="_texto1", DbType="CHARACTER VARYING")] string _texto1, [Parameter(Name="_titulo2", DbType="CHARACTER VARYING")] string _titulo2, [Parameter(Name="_texto2", DbType="CHARACTER VARYING")] string _texto2, [Parameter(Name="_titulo3", DbType="CHARACTER VARYING")] string _titulo3, [Parameter(Name="_texto3", DbType="CHARACTER VARYING")] string _texto3, [Parameter(Name="_info_ubicacion", DbType="CHARACTER VARYING")] string _info_ubicacion, [Parameter(Name="_ciudad", DbType="CHARACTER VARYING")] string _ciudad, [Parameter(Name="_direccion", DbType="CHARACTER VARYING")] string _direccion, [Parameter(Name="_mapa", DbType="CHARACTER VARYING")] string _mapa, [Parameter(Name="_email", DbType="CHARACTER VARYING")] string _email, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FInformacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre_restaurante, _mision, _vision, _quienes, _eslogan, _titulo1, _texto1, _titulo2, _texto2, _titulo3, _texto3, _info_ubicacion, _ciudad, _direccion, _mapa, _email, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FTerminarCalificacion in the schema.
        /// </summary>
        [Function(Name=@"public.f_terminar_calificacion", IsComposable=true)]
        public System.Linq.IQueryable<FUsuarioNoAsistioResult> FTerminarCalificacion([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id)
        {
            return this.CreateMethodCallQuery<FUsuarioNoAsistioResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
        }

    
        /// <summary>
        /// There are no comments for FIngrediente in the schema.
        /// </summary>
        [Function(Name=@"public.f_ingredientes", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarIngredienteResult> FIngrediente()
        {
            return this.CreateMethodCallQuery<FEliminarIngredienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FReservaId2 in the schema.
        /// </summary>
        [Function(Name=@"public.f_reserva_id2", IsComposable=true)]
        public System.Linq.IQueryable<FOpcionesReservaResult> FReservaId2([Parameter(Name="_user_id", DbType="INTEGER")] System.Nullable<int> _user_id)
        {
            return this.CreateMethodCallQuery<FOpcionesReservaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _user_id);
        }

    
        /// <summary>
        /// There are no comments for FPlatosCal2 in the schema.
        /// </summary>
        [Function(Name=@"public.f_platos_cal2", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FPlatosCal2()
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FEliminarPlatoVenta in the schema.
        /// </summary>
        [Function(Name=@"public.f_eliminar_plato_venta", IsComposable=true)]
        public System.Linq.IQueryable<FCalcularCalificacionResult> FEliminarPlatoVenta([Parameter(Name="_plato_venta", DbType="INTEGER")] System.Nullable<int> _plato_venta, [Parameter(Name="_reserva", DbType="INTEGER")] System.Nullable<int> _reserva)
        {
            return this.CreateMethodCallQuery<FCalcularCalificacionResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _plato_venta, _reserva);
        }

    
        /// <summary>
        /// There are no comments for FPlato in the schema.
        /// </summary>
        [Function(Name=@"public.f_platos", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FPlato()
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for FMostrarPlaIngre in the schema.
        /// </summary>
        [Function(Name=@"public.f_mostrar_pla_ingre", IsComposable=true)]
        public System.Linq.IQueryable<FMostrarPlaIngreResult> FMostrarPlaIngre([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id)
        {
            return this.CreateMethodCallQuery<FMostrarPlaIngreResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id);
        }

    
        /// <summary>
        /// There are no comments for FModificarMesa in the schema.
        /// </summary>
        [Function(Name=@"public.f_modificar_mesas", IsComposable=true)]
        public System.Linq.IQueryable<FMesaResult> FModificarMesa([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_sillas", DbType="INTEGER")] System.Nullable<int> _sillas, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FMesaResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _sillas, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FModificarIngrediente in the schema.
        /// </summary>
        [Function(Name=@"public.f_modificar_ingredientes", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarIngredienteResult> FModificarIngrediente([Parameter(Name="_id", DbType="INTEGER")] System.Nullable<int> _id, [Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_cantidad", DbType="DOUBLE PRECISION")] System.Nullable<double> _cantidad, [Parameter(Name="_descripcion", DbType="CHARACTER VARYING")] string _descripcion, [Parameter(Name="_minimo", DbType="DOUBLE PRECISION")] System.Nullable<double> _minimo, [Parameter(Name="_unidad", DbType="CHARACTER VARYING")] string _unidad, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarIngredienteResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _id, _nombre, _cantidad, _descripcion, _minimo, _unidad, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FInsertarPlato in the schema.
        /// </summary>
        [Function(Name=@"public.f_insertar_platos", IsComposable=true)]
        public System.Linq.IQueryable<FEliminarPlatoResult> FInsertarPlato([Parameter(Name="_nombre", DbType="CHARACTER VARYING")] string _nombre, [Parameter(Name="_precio", DbType="INTEGER")] System.Nullable<int> _precio, [Parameter(Name="_descripcion", DbType="CHARACTER VARYING")] string _descripcion, [Parameter(Name="_calificacion", DbType="INTEGER")] System.Nullable<int> _calificacion, [Parameter(Name="_url_imagen", DbType="CHARACTER VARYING")] string _url_imagen, [Parameter(Name="_modified_by", DbType="INTEGER")] System.Nullable<int> _modified_by)
        {
            return this.CreateMethodCallQuery<FEliminarPlatoResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _nombre, _precio, _descripcion, _calificacion, _url_imagen, _modified_by);
        }

    
        /// <summary>
        /// There are no comments for FAgendum in the schema.
        /// </summary>
        [Function(Name=@"public.f_agenda", IsComposable=true)]
        public System.Linq.IQueryable<FAgendumResult> FAgendum([Parameter(Name="_personas", DbType="INTEGER")] System.Nullable<int> _personas, [Parameter(Name="_hora", DbType="CHARACTER VARYING")] string _hora)
        {
            return this.CreateMethodCallQuery<FAgendumResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _personas, _hora);
        }
    }
}

namespace BaseRestauranteContext
{

    /// <summary>
    /// There are no comments for FMostrarPlatosCalificacionResult in the schema.
    /// </summary>
    public partial class FMostrarPlatosCalificacionResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _NombrePlato;

        private System.Nullable<double> _Calificacion;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombrePlatoChanging(string value);
        partial void OnNombrePlatoChanged();
        partial void OnCalificacionChanging(System.Nullable<double> value);
        partial void OnCalificacionChanged();
        #endregion

        public FMostrarPlatosCalificacionResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombrePlato in the schema.
        /// </summary>
        [Column(Name = @"nombre_plato", Storage = "_NombrePlato", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombrePlato
        {
            get
            {
                return this._NombrePlato;
            }
            set
            {
                if (this._NombrePlato != value)
                {
                    this.OnNombrePlatoChanging(value);
                    this.SendPropertyChanging("NombrePlato");
                    this._NombrePlato = value;
                    this.SendPropertyChanged("NombrePlato");
                    this.OnNombrePlatoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Calificacion in the schema.
        /// </summary>
        [Column(Name = @"calificacion", Storage = "_Calificacion", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Calificacion
        {
            get
            {
                return this._Calificacion;
            }
            set
            {
                if (this._Calificacion != value)
                {
                    this.OnCalificacionChanging(value);
                    this.SendPropertyChanging("Calificacion");
                    this._Calificacion = value;
                    this.SendPropertyChanged("Calificacion");
                    this.OnCalificacionChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FUsuarioNoAsistioResult in the schema.
    /// </summary>
    public partial class FUsuarioNoAsistioResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private string _Correo;

        private System.Nullable<int> _Cedula;

        private string _Telefono;

        private string _UserName;

        private string _Clave;

        private System.Nullable<int> _RolId;

        private System.Nullable<int> _EstadoUsuario;

        private System.Nullable<int> _EstadoReserva;

        private string _Ip;

        private string _Mac;

        private System.Nullable<int> _ModifiedBy;

        private System.Nullable<int> _MaxIntentos;

        private System.Nullable<int> _NumeroIntentos;

        private System.Nullable<System.DateTime> _FechaBloqueo;

        private System.Nullable<int> _NumeroSesiones;

        private System.Nullable<int> _SesionesActivas;

        private System.Nullable<int> _Activa;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnCorreoChanging(string value);
        partial void OnCorreoChanged();
        partial void OnCedulaChanging(System.Nullable<int> value);
        partial void OnCedulaChanged();
        partial void OnTelefonoChanging(string value);
        partial void OnTelefonoChanged();
        partial void OnUserNameChanging(string value);
        partial void OnUserNameChanged();
        partial void OnClaveChanging(string value);
        partial void OnClaveChanged();
        partial void OnRolIdChanging(System.Nullable<int> value);
        partial void OnRolIdChanged();
        partial void OnEstadoUsuarioChanging(System.Nullable<int> value);
        partial void OnEstadoUsuarioChanged();
        partial void OnEstadoReservaChanging(System.Nullable<int> value);
        partial void OnEstadoReservaChanged();
        partial void OnIpChanging(string value);
        partial void OnIpChanged();
        partial void OnMacChanging(string value);
        partial void OnMacChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        partial void OnMaxIntentosChanging(System.Nullable<int> value);
        partial void OnMaxIntentosChanged();
        partial void OnNumeroIntentosChanging(System.Nullable<int> value);
        partial void OnNumeroIntentosChanged();
        partial void OnFechaBloqueoChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaBloqueoChanged();
        partial void OnNumeroSesionesChanging(System.Nullable<int> value);
        partial void OnNumeroSesionesChanged();
        partial void OnSesionesActivasChanging(System.Nullable<int> value);
        partial void OnSesionesActivasChanged();
        partial void OnActivaChanging(System.Nullable<int> value);
        partial void OnActivaChanged();
        #endregion

        public FUsuarioNoAsistioResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [Column(Name = @"correo", Storage = "_Correo", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Correo
        {
            get
            {
                return this._Correo;
            }
            set
            {
                if (this._Correo != value)
                {
                    this.OnCorreoChanging(value);
                    this.SendPropertyChanging("Correo");
                    this._Correo = value;
                    this.SendPropertyChanged("Correo");
                    this.OnCorreoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cedula in the schema.
        /// </summary>
        [Column(Name = @"cedula", Storage = "_Cedula", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Cedula
        {
            get
            {
                return this._Cedula;
            }
            set
            {
                if (this._Cedula != value)
                {
                    this.OnCedulaChanging(value);
                    this.SendPropertyChanging("Cedula");
                    this._Cedula = value;
                    this.SendPropertyChanged("Cedula");
                    this.OnCedulaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Name = @"telefono", Storage = "_Telefono", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [Column(Name = @"user_name", Storage = "_UserName", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if (this._UserName != value)
                {
                    this.OnUserNameChanging(value);
                    this.SendPropertyChanging("UserName");
                    this._UserName = value;
                    this.SendPropertyChanged("UserName");
                    this.OnUserNameChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Clave in the schema.
        /// </summary>
        [Column(Name = @"clave", Storage = "_Clave", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Clave
        {
            get
            {
                return this._Clave;
            }
            set
            {
                if (this._Clave != value)
                {
                    this.OnClaveChanging(value);
                    this.SendPropertyChanging("Clave");
                    this._Clave = value;
                    this.SendPropertyChanged("Clave");
                    this.OnClaveChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RolId in the schema.
        /// </summary>
        [Column(Name = @"rol_id", Storage = "_RolId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> RolId
        {
            get
            {
                return this._RolId;
            }
            set
            {
                if (this._RolId != value)
                {
                    this.OnRolIdChanging(value);
                    this.SendPropertyChanging("RolId");
                    this._RolId = value;
                    this.SendPropertyChanged("RolId");
                    this.OnRolIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EstadoUsuario in the schema.
        /// </summary>
        [Column(Name = @"estado_usuario", Storage = "_EstadoUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> EstadoUsuario
        {
            get
            {
                return this._EstadoUsuario;
            }
            set
            {
                if (this._EstadoUsuario != value)
                {
                    this.OnEstadoUsuarioChanging(value);
                    this.SendPropertyChanging("EstadoUsuario");
                    this._EstadoUsuario = value;
                    this.SendPropertyChanged("EstadoUsuario");
                    this.OnEstadoUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EstadoReserva in the schema.
        /// </summary>
        [Column(Name = @"estado_reserva", Storage = "_EstadoReserva", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> EstadoReserva
        {
            get
            {
                return this._EstadoReserva;
            }
            set
            {
                if (this._EstadoReserva != value)
                {
                    this.OnEstadoReservaChanging(value);
                    this.SendPropertyChanging("EstadoReserva");
                    this._EstadoReserva = value;
                    this.SendPropertyChanged("EstadoReserva");
                    this.OnEstadoReservaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ip in the schema.
        /// </summary>
        [Column(Name = @"ip", Storage = "_Ip", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Ip
        {
            get
            {
                return this._Ip;
            }
            set
            {
                if (this._Ip != value)
                {
                    this.OnIpChanging(value);
                    this.SendPropertyChanging("Ip");
                    this._Ip = value;
                    this.SendPropertyChanged("Ip");
                    this.OnIpChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mac in the schema.
        /// </summary>
        [Column(Name = @"mac", Storage = "_Mac", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Mac
        {
            get
            {
                return this._Mac;
            }
            set
            {
                if (this._Mac != value)
                {
                    this.OnMacChanging(value);
                    this.SendPropertyChanging("Mac");
                    this._Mac = value;
                    this.SendPropertyChanged("Mac");
                    this.OnMacChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MaxIntentos in the schema.
        /// </summary>
        [Column(Name = @"max_intentos", Storage = "_MaxIntentos", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MaxIntentos
        {
            get
            {
                return this._MaxIntentos;
            }
            set
            {
                if (this._MaxIntentos != value)
                {
                    this.OnMaxIntentosChanging(value);
                    this.SendPropertyChanging("MaxIntentos");
                    this._MaxIntentos = value;
                    this.SendPropertyChanged("MaxIntentos");
                    this.OnMaxIntentosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumeroIntentos in the schema.
        /// </summary>
        [Column(Name = @"numero_intentos", Storage = "_NumeroIntentos", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NumeroIntentos
        {
            get
            {
                return this._NumeroIntentos;
            }
            set
            {
                if (this._NumeroIntentos != value)
                {
                    this.OnNumeroIntentosChanging(value);
                    this.SendPropertyChanging("NumeroIntentos");
                    this._NumeroIntentos = value;
                    this.SendPropertyChanged("NumeroIntentos");
                    this.OnNumeroIntentosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaBloqueo in the schema.
        /// </summary>
        [Column(Name = @"fecha_bloqueo", Storage = "_FechaBloqueo", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaBloqueo
        {
            get
            {
                return this._FechaBloqueo;
            }
            set
            {
                if (this._FechaBloqueo != value)
                {
                    this.OnFechaBloqueoChanging(value);
                    this.SendPropertyChanging("FechaBloqueo");
                    this._FechaBloqueo = value;
                    this.SendPropertyChanged("FechaBloqueo");
                    this.OnFechaBloqueoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumeroSesiones in the schema.
        /// </summary>
        [Column(Name = @"numero_sesiones", Storage = "_NumeroSesiones", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NumeroSesiones
        {
            get
            {
                return this._NumeroSesiones;
            }
            set
            {
                if (this._NumeroSesiones != value)
                {
                    this.OnNumeroSesionesChanging(value);
                    this.SendPropertyChanging("NumeroSesiones");
                    this._NumeroSesiones = value;
                    this.SendPropertyChanged("NumeroSesiones");
                    this.OnNumeroSesionesChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SesionesActivas in the schema.
        /// </summary>
        [Column(Name = @"sesiones_activas", Storage = "_SesionesActivas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SesionesActivas
        {
            get
            {
                return this._SesionesActivas;
            }
            set
            {
                if (this._SesionesActivas != value)
                {
                    this.OnSesionesActivasChanging(value);
                    this.SendPropertyChanging("SesionesActivas");
                    this._SesionesActivas = value;
                    this.SendPropertyChanged("SesionesActivas");
                    this.OnSesionesActivasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Activa in the schema.
        /// </summary>
        [Column(Name = @"activa", Storage = "_Activa", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Activa
        {
            get
            {
                return this._Activa;
            }
            set
            {
                if (this._Activa != value)
                {
                    this.OnActivaChanging(value);
                    this.SendPropertyChanging("Activa");
                    this._Activa = value;
                    this.SendPropertyChanged("Activa");
                    this.OnActivaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FCalcularCalificacionResult in the schema.
    /// </summary>
    public partial class FCalcularCalificacionResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<bool> _ReturnValue;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnReturnValueChanging(System.Nullable<bool> value);
        partial void OnReturnValueChanged();
        #endregion

        public FCalcularCalificacionResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for ReturnValue in the schema.
        /// </summary>
        [Column(Name = @"return_value", Storage = "_ReturnValue", DbType = "BOOLEAN", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<bool> ReturnValue
        {
            get
            {
                return this._ReturnValue;
            }
            set
            {
                if (this._ReturnValue != value)
                {
                    this.OnReturnValueChanging(value);
                    this.SendPropertyChanging("ReturnValue");
                    this._ReturnValue = value;
                    this.SendPropertyChanged("ReturnValue");
                    this.OnReturnValueChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FContactoResult in the schema.
    /// </summary>
    public partial class FContactoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private string _Email;

        private string _Telefono;

        private string _Mensaje;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnTelefonoChanging(string value);
        partial void OnTelefonoChanged();
        partial void OnMensajeChanging(string value);
        partial void OnMensajeChanged();
        #endregion

        public FContactoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Name = @"email", Storage = "_Email", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging("Email");
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Name = @"telefono", Storage = "_Telefono", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mensaje in the schema.
        /// </summary>
        [Column(Name = @"mensaje", Storage = "_Mensaje", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Mensaje
        {
            get
            {
                return this._Mensaje;
            }
            set
            {
                if (this._Mensaje != value)
                {
                    this.OnMensajeChanging(value);
                    this.SendPropertyChanging("Mensaje");
                    this._Mensaje = value;
                    this.SendPropertyChanged("Mensaje");
                    this.OnMensajeChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FMostrarTipoResult in the schema.
    /// </summary>
    public partial class FMostrarTipoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private System.Nullable<int> _Precio;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnPrecioChanging(System.Nullable<int> value);
        partial void OnPrecioChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FMostrarTipoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Precio in the schema.
        /// </summary>
        [Column(Name = @"precio", Storage = "_Precio", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Precio
        {
            get
            {
                return this._Precio;
            }
            set
            {
                if (this._Precio != value)
                {
                    this.OnPrecioChanging(value);
                    this.SendPropertyChanging("Precio");
                    this._Precio = value;
                    this.SendPropertyChanged("Precio");
                    this.OnPrecioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FEliminarPlatoResult in the schema.
    /// </summary>
    public partial class FEliminarPlatoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private System.Nullable<int> _Precio;

        private string _Descripcion;

        private System.Nullable<double> _Calificacion;

        private string _UrlImagen;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnPrecioChanging(System.Nullable<int> value);
        partial void OnPrecioChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnCalificacionChanging(System.Nullable<double> value);
        partial void OnCalificacionChanged();
        partial void OnUrlImagenChanging(string value);
        partial void OnUrlImagenChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FEliminarPlatoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Precio in the schema.
        /// </summary>
        [Column(Name = @"precio", Storage = "_Precio", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Precio
        {
            get
            {
                return this._Precio;
            }
            set
            {
                if (this._Precio != value)
                {
                    this.OnPrecioChanging(value);
                    this.SendPropertyChanging("Precio");
                    this._Precio = value;
                    this.SendPropertyChanged("Precio");
                    this.OnPrecioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Calificacion in the schema.
        /// </summary>
        [Column(Name = @"calificacion", Storage = "_Calificacion", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Calificacion
        {
            get
            {
                return this._Calificacion;
            }
            set
            {
                if (this._Calificacion != value)
                {
                    this.OnCalificacionChanging(value);
                    this.SendPropertyChanging("Calificacion");
                    this._Calificacion = value;
                    this.SendPropertyChanged("Calificacion");
                    this.OnCalificacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UrlImagen in the schema.
        /// </summary>
        [Column(Name = @"url_imagen", Storage = "_UrlImagen", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string UrlImagen
        {
            get
            {
                return this._UrlImagen;
            }
            set
            {
                if (this._UrlImagen != value)
                {
                    this.OnUrlImagenChanging(value);
                    this.SendPropertyChanging("UrlImagen");
                    this._UrlImagen = value;
                    this.SendPropertyChanged("UrlImagen");
                    this.OnUrlImagenChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FEliminarIngredienteResult in the schema.
    /// </summary>
    public partial class FEliminarIngredienteResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private System.Nullable<double> _Cantidad;

        private string _Descripcion;

        private System.Nullable<double> _Minimo;

        private string _Unidad;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnCantidadChanging(System.Nullable<double> value);
        partial void OnCantidadChanged();
        partial void OnDescripcionChanging(string value);
        partial void OnDescripcionChanged();
        partial void OnMinimoChanging(System.Nullable<double> value);
        partial void OnMinimoChanged();
        partial void OnUnidadChanging(string value);
        partial void OnUnidadChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FEliminarIngredienteResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"cantidad", Storage = "_Cantidad", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging("Cantidad");
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descripcion in the schema.
        /// </summary>
        [Column(Name = @"descripcion", Storage = "_Descripcion", DbType = "TEXT", UpdateCheck = UpdateCheck.Never)]
        public string Descripcion
        {
            get
            {
                return this._Descripcion;
            }
            set
            {
                if (this._Descripcion != value)
                {
                    this.OnDescripcionChanging(value);
                    this.SendPropertyChanging("Descripcion");
                    this._Descripcion = value;
                    this.SendPropertyChanged("Descripcion");
                    this.OnDescripcionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Minimo in the schema.
        /// </summary>
        [Column(Name = @"minimo", Storage = "_Minimo", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Minimo
        {
            get
            {
                return this._Minimo;
            }
            set
            {
                if (this._Minimo != value)
                {
                    this.OnMinimoChanging(value);
                    this.SendPropertyChanging("Minimo");
                    this._Minimo = value;
                    this.SendPropertyChanged("Minimo");
                    this.OnMinimoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Unidad in the schema.
        /// </summary>
        [Column(Name = @"unidad", Storage = "_Unidad", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Unidad
        {
            get
            {
                return this._Unidad;
            }
            set
            {
                if (this._Unidad != value)
                {
                    this.OnUnidadChanging(value);
                    this.SendPropertyChanging("Unidad");
                    this._Unidad = value;
                    this.SendPropertyChanged("Unidad");
                    this.OnUnidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FInformacionResult in the schema.
    /// </summary>
    public partial class FInformacionResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _NombreRestaurante;

        private string _Mision;

        private string _Vision;

        private string _Quienes;

        private string _Eslogan;

        private string _Titulo1;

        private string _Texto1;

        private string _Titulo2;

        private string _Texto2;

        private string _Titulo3;

        private string _Texto3;

        private string _InfoUbicacion;

        private string _Ciudad;

        private string _Direccion;

        private string _Mapa;

        private string _Email;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreRestauranteChanging(string value);
        partial void OnNombreRestauranteChanged();
        partial void OnMisionChanging(string value);
        partial void OnMisionChanged();
        partial void OnVisionChanging(string value);
        partial void OnVisionChanged();
        partial void OnQuienesChanging(string value);
        partial void OnQuienesChanged();
        partial void OnEsloganChanging(string value);
        partial void OnEsloganChanged();
        partial void OnTitulo1Changing(string value);
        partial void OnTitulo1Changed();
        partial void OnTexto1Changing(string value);
        partial void OnTexto1Changed();
        partial void OnTitulo2Changing(string value);
        partial void OnTitulo2Changed();
        partial void OnTexto2Changing(string value);
        partial void OnTexto2Changed();
        partial void OnTitulo3Changing(string value);
        partial void OnTitulo3Changed();
        partial void OnTexto3Changing(string value);
        partial void OnTexto3Changed();
        partial void OnInfoUbicacionChanging(string value);
        partial void OnInfoUbicacionChanged();
        partial void OnCiudadChanging(string value);
        partial void OnCiudadChanged();
        partial void OnDireccionChanging(string value);
        partial void OnDireccionChanged();
        partial void OnMapaChanging(string value);
        partial void OnMapaChanged();
        partial void OnEmailChanging(string value);
        partial void OnEmailChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FInformacionResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreRestaurante in the schema.
        /// </summary>
        [Column(Name = @"nombre_restaurante", Storage = "_NombreRestaurante", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombreRestaurante
        {
            get
            {
                return this._NombreRestaurante;
            }
            set
            {
                if (this._NombreRestaurante != value)
                {
                    this.OnNombreRestauranteChanging(value);
                    this.SendPropertyChanging("NombreRestaurante");
                    this._NombreRestaurante = value;
                    this.SendPropertyChanged("NombreRestaurante");
                    this.OnNombreRestauranteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mision in the schema.
        /// </summary>
        [Column(Name = @"mision", Storage = "_Mision", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Mision
        {
            get
            {
                return this._Mision;
            }
            set
            {
                if (this._Mision != value)
                {
                    this.OnMisionChanging(value);
                    this.SendPropertyChanging("Mision");
                    this._Mision = value;
                    this.SendPropertyChanged("Mision");
                    this.OnMisionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Vision in the schema.
        /// </summary>
        [Column(Name = @"vision", Storage = "_Vision", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Vision
        {
            get
            {
                return this._Vision;
            }
            set
            {
                if (this._Vision != value)
                {
                    this.OnVisionChanging(value);
                    this.SendPropertyChanging("Vision");
                    this._Vision = value;
                    this.SendPropertyChanged("Vision");
                    this.OnVisionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Quienes in the schema.
        /// </summary>
        [Column(Name = @"quienes", Storage = "_Quienes", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Quienes
        {
            get
            {
                return this._Quienes;
            }
            set
            {
                if (this._Quienes != value)
                {
                    this.OnQuienesChanging(value);
                    this.SendPropertyChanging("Quienes");
                    this._Quienes = value;
                    this.SendPropertyChanged("Quienes");
                    this.OnQuienesChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Eslogan in the schema.
        /// </summary>
        [Column(Name = @"eslogan", Storage = "_Eslogan", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Eslogan
        {
            get
            {
                return this._Eslogan;
            }
            set
            {
                if (this._Eslogan != value)
                {
                    this.OnEsloganChanging(value);
                    this.SendPropertyChanging("Eslogan");
                    this._Eslogan = value;
                    this.SendPropertyChanged("Eslogan");
                    this.OnEsloganChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Titulo1 in the schema.
        /// </summary>
        [Column(Name = @"titulo1", Storage = "_Titulo1", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Titulo1
        {
            get
            {
                return this._Titulo1;
            }
            set
            {
                if (this._Titulo1 != value)
                {
                    this.OnTitulo1Changing(value);
                    this.SendPropertyChanging("Titulo1");
                    this._Titulo1 = value;
                    this.SendPropertyChanged("Titulo1");
                    this.OnTitulo1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Texto1 in the schema.
        /// </summary>
        [Column(Name = @"texto1", Storage = "_Texto1", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Texto1
        {
            get
            {
                return this._Texto1;
            }
            set
            {
                if (this._Texto1 != value)
                {
                    this.OnTexto1Changing(value);
                    this.SendPropertyChanging("Texto1");
                    this._Texto1 = value;
                    this.SendPropertyChanged("Texto1");
                    this.OnTexto1Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Titulo2 in the schema.
        /// </summary>
        [Column(Name = @"titulo2", Storage = "_Titulo2", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Titulo2
        {
            get
            {
                return this._Titulo2;
            }
            set
            {
                if (this._Titulo2 != value)
                {
                    this.OnTitulo2Changing(value);
                    this.SendPropertyChanging("Titulo2");
                    this._Titulo2 = value;
                    this.SendPropertyChanged("Titulo2");
                    this.OnTitulo2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Texto2 in the schema.
        /// </summary>
        [Column(Name = @"texto2", Storage = "_Texto2", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Texto2
        {
            get
            {
                return this._Texto2;
            }
            set
            {
                if (this._Texto2 != value)
                {
                    this.OnTexto2Changing(value);
                    this.SendPropertyChanging("Texto2");
                    this._Texto2 = value;
                    this.SendPropertyChanged("Texto2");
                    this.OnTexto2Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Titulo3 in the schema.
        /// </summary>
        [Column(Name = @"titulo3", Storage = "_Titulo3", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Titulo3
        {
            get
            {
                return this._Titulo3;
            }
            set
            {
                if (this._Titulo3 != value)
                {
                    this.OnTitulo3Changing(value);
                    this.SendPropertyChanging("Titulo3");
                    this._Titulo3 = value;
                    this.SendPropertyChanged("Titulo3");
                    this.OnTitulo3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Texto3 in the schema.
        /// </summary>
        [Column(Name = @"texto3", Storage = "_Texto3", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Texto3
        {
            get
            {
                return this._Texto3;
            }
            set
            {
                if (this._Texto3 != value)
                {
                    this.OnTexto3Changing(value);
                    this.SendPropertyChanging("Texto3");
                    this._Texto3 = value;
                    this.SendPropertyChanged("Texto3");
                    this.OnTexto3Changed();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for InfoUbicacion in the schema.
        /// </summary>
        [Column(Name = @"info_ubicacion", Storage = "_InfoUbicacion", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string InfoUbicacion
        {
            get
            {
                return this._InfoUbicacion;
            }
            set
            {
                if (this._InfoUbicacion != value)
                {
                    this.OnInfoUbicacionChanging(value);
                    this.SendPropertyChanging("InfoUbicacion");
                    this._InfoUbicacion = value;
                    this.SendPropertyChanged("InfoUbicacion");
                    this.OnInfoUbicacionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Ciudad in the schema.
        /// </summary>
        [Column(Name = @"ciudad", Storage = "_Ciudad", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Ciudad
        {
            get
            {
                return this._Ciudad;
            }
            set
            {
                if (this._Ciudad != value)
                {
                    this.OnCiudadChanging(value);
                    this.SendPropertyChanging("Ciudad");
                    this._Ciudad = value;
                    this.SendPropertyChanged("Ciudad");
                    this.OnCiudadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [Column(Name = @"direccion", Storage = "_Direccion", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Direccion
        {
            get
            {
                return this._Direccion;
            }
            set
            {
                if (this._Direccion != value)
                {
                    this.OnDireccionChanging(value);
                    this.SendPropertyChanging("Direccion");
                    this._Direccion = value;
                    this.SendPropertyChanged("Direccion");
                    this.OnDireccionChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mapa in the schema.
        /// </summary>
        [Column(Name = @"mapa", Storage = "_Mapa", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Mapa
        {
            get
            {
                return this._Mapa;
            }
            set
            {
                if (this._Mapa != value)
                {
                    this.OnMapaChanging(value);
                    this.SendPropertyChanging("Mapa");
                    this._Mapa = value;
                    this.SendPropertyChanged("Mapa");
                    this.OnMapaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [Column(Name = @"email", Storage = "_Email", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.OnEmailChanging(value);
                    this.SendPropertyChanging("Email");
                    this._Email = value;
                    this.SendPropertyChanged("Email");
                    this.OnEmailChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FReservaResult in the schema.
    /// </summary>
    public partial class FReservaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _Nombre;

        private System.Nullable<System.TimeSpan> _FechaSalida;

        private System.Nullable<System.TimeSpan> _FechaInicial;

        private System.Nullable<System.DateTime> _FechaFinal;

        private string _NombreEstado;

        private System.Nullable<int> _NumeroDePersonas;

        private System.Nullable<int> _NuemeroDeSillas;

        private System.Nullable<int> _PrecioTotal;

        private string _Tipo1;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnFechaSalidaChanging(System.Nullable<System.TimeSpan> value);
        partial void OnFechaSalidaChanged();
        partial void OnFechaInicialChanging(System.Nullable<System.TimeSpan> value);
        partial void OnFechaInicialChanged();
        partial void OnFechaFinalChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaFinalChanged();
        partial void OnNombreEstadoChanging(string value);
        partial void OnNombreEstadoChanged();
        partial void OnNumeroDePersonasChanging(System.Nullable<int> value);
        partial void OnNumeroDePersonasChanged();
        partial void OnNuemeroDeSillasChanging(System.Nullable<int> value);
        partial void OnNuemeroDeSillasChanged();
        partial void OnPrecioTotalChanging(System.Nullable<int> value);
        partial void OnPrecioTotalChanged();
        partial void OnTipo1Changing(string value);
        partial void OnTipo1Changed();
        #endregion

        public FReservaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaSalida in the schema.
        /// </summary>
        [Column(Name = @"fecha_salida", Storage = "_FechaSalida", DbType = "TIME WITH TIME ZONE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> FechaSalida
        {
            get
            {
                return this._FechaSalida;
            }
            set
            {
                if (this._FechaSalida != value)
                {
                    this.OnFechaSalidaChanging(value);
                    this.SendPropertyChanging("FechaSalida");
                    this._FechaSalida = value;
                    this.SendPropertyChanged("FechaSalida");
                    this.OnFechaSalidaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaInicial in the schema.
        /// </summary>
        [Column(Name = @"fecha_inicial", Storage = "_FechaInicial", DbType = "TIME WITH TIME ZONE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> FechaInicial
        {
            get
            {
                return this._FechaInicial;
            }
            set
            {
                if (this._FechaInicial != value)
                {
                    this.OnFechaInicialChanging(value);
                    this.SendPropertyChanging("FechaInicial");
                    this._FechaInicial = value;
                    this.SendPropertyChanged("FechaInicial");
                    this.OnFechaInicialChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaFinal in the schema.
        /// </summary>
        [Column(Name = @"fecha_final", Storage = "_FechaFinal", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaFinal
        {
            get
            {
                return this._FechaFinal;
            }
            set
            {
                if (this._FechaFinal != value)
                {
                    this.OnFechaFinalChanging(value);
                    this.SendPropertyChanging("FechaFinal");
                    this._FechaFinal = value;
                    this.SendPropertyChanged("FechaFinal");
                    this.OnFechaFinalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreEstado in the schema.
        /// </summary>
        [Column(Name = @"nombre_estado", Storage = "_NombreEstado", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombreEstado
        {
            get
            {
                return this._NombreEstado;
            }
            set
            {
                if (this._NombreEstado != value)
                {
                    this.OnNombreEstadoChanging(value);
                    this.SendPropertyChanging("NombreEstado");
                    this._NombreEstado = value;
                    this.SendPropertyChanged("NombreEstado");
                    this.OnNombreEstadoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumeroDePersonas in the schema.
        /// </summary>
        [Column(Name = @"numero_de_personas", Storage = "_NumeroDePersonas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NumeroDePersonas
        {
            get
            {
                return this._NumeroDePersonas;
            }
            set
            {
                if (this._NumeroDePersonas != value)
                {
                    this.OnNumeroDePersonasChanging(value);
                    this.SendPropertyChanging("NumeroDePersonas");
                    this._NumeroDePersonas = value;
                    this.SendPropertyChanged("NumeroDePersonas");
                    this.OnNumeroDePersonasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NuemeroDeSillas in the schema.
        /// </summary>
        [Column(Name = @"nuemero_de_sillas", Storage = "_NuemeroDeSillas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NuemeroDeSillas
        {
            get
            {
                return this._NuemeroDeSillas;
            }
            set
            {
                if (this._NuemeroDeSillas != value)
                {
                    this.OnNuemeroDeSillasChanging(value);
                    this.SendPropertyChanging("NuemeroDeSillas");
                    this._NuemeroDeSillas = value;
                    this.SendPropertyChanged("NuemeroDeSillas");
                    this.OnNuemeroDeSillasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioTotal in the schema.
        /// </summary>
        [Column(Name = @"precio_total", Storage = "_PrecioTotal", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioTotal
        {
            get
            {
                return this._PrecioTotal;
            }
            set
            {
                if (this._PrecioTotal != value)
                {
                    this.OnPrecioTotalChanging(value);
                    this.SendPropertyChanging("PrecioTotal");
                    this._PrecioTotal = value;
                    this.SendPropertyChanged("PrecioTotal");
                    this.OnPrecioTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Tipo1 in the schema.
        /// </summary>
        [Column(Name = @"tipo1", Storage = "_Tipo1", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Tipo1
        {
            get
            {
                return this._Tipo1;
            }
            set
            {
                if (this._Tipo1 != value)
                {
                    this.OnTipo1Changing(value);
                    this.SendPropertyChanging("Tipo1");
                    this._Tipo1 = value;
                    this.SendPropertyChanged("Tipo1");
                    this.OnTipo1Changed();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FReservaIdResult in the schema.
    /// </summary>
    public partial class FReservaIdResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _CantPersonas;

        private System.Nullable<int> _PrecioTotal;

        private System.Nullable<System.DateTime> _Fecha;

        private System.Nullable<System.TimeSpan> _HIni;

        private string _NombrePlato;

        private System.Nullable<int> _PrecioUnit;

        private System.Nullable<int> _Cantidad;

        private System.Nullable<int> _PrecioTotalPlato;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCantPersonasChanging(System.Nullable<int> value);
        partial void OnCantPersonasChanged();
        partial void OnPrecioTotalChanging(System.Nullable<int> value);
        partial void OnPrecioTotalChanged();
        partial void OnFechaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
        partial void OnHIniChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHIniChanged();
        partial void OnNombrePlatoChanging(string value);
        partial void OnNombrePlatoChanged();
        partial void OnPrecioUnitChanging(System.Nullable<int> value);
        partial void OnPrecioUnitChanged();
        partial void OnCantidadChanging(System.Nullable<int> value);
        partial void OnCantidadChanged();
        partial void OnPrecioTotalPlatoChanging(System.Nullable<int> value);
        partial void OnPrecioTotalPlatoChanged();
        #endregion

        public FReservaIdResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CantPersonas in the schema.
        /// </summary>
        [Column(Name = @"cant_personas", Storage = "_CantPersonas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CantPersonas
        {
            get
            {
                return this._CantPersonas;
            }
            set
            {
                if (this._CantPersonas != value)
                {
                    this.OnCantPersonasChanging(value);
                    this.SendPropertyChanging("CantPersonas");
                    this._CantPersonas = value;
                    this.SendPropertyChanged("CantPersonas");
                    this.OnCantPersonasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioTotal in the schema.
        /// </summary>
        [Column(Name = @"precio_total", Storage = "_PrecioTotal", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioTotal
        {
            get
            {
                return this._PrecioTotal;
            }
            set
            {
                if (this._PrecioTotal != value)
                {
                    this.OnPrecioTotalChanging(value);
                    this.SendPropertyChanging("PrecioTotal");
                    this._PrecioTotal = value;
                    this.SendPropertyChanged("PrecioTotal");
                    this.OnPrecioTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"fecha", Storage = "_Fecha", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HIni in the schema.
        /// </summary>
        [Column(Name = @"h_ini", Storage = "_HIni", DbType = "TIME WITH TIME ZONE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HIni
        {
            get
            {
                return this._HIni;
            }
            set
            {
                if (this._HIni != value)
                {
                    this.OnHIniChanging(value);
                    this.SendPropertyChanging("HIni");
                    this._HIni = value;
                    this.SendPropertyChanged("HIni");
                    this.OnHIniChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombrePlato in the schema.
        /// </summary>
        [Column(Name = @"nombre_plato", Storage = "_NombrePlato", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombrePlato
        {
            get
            {
                return this._NombrePlato;
            }
            set
            {
                if (this._NombrePlato != value)
                {
                    this.OnNombrePlatoChanging(value);
                    this.SendPropertyChanging("NombrePlato");
                    this._NombrePlato = value;
                    this.SendPropertyChanged("NombrePlato");
                    this.OnNombrePlatoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioUnit in the schema.
        /// </summary>
        [Column(Name = @"precio_unit", Storage = "_PrecioUnit", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioUnit
        {
            get
            {
                return this._PrecioUnit;
            }
            set
            {
                if (this._PrecioUnit != value)
                {
                    this.OnPrecioUnitChanging(value);
                    this.SendPropertyChanging("PrecioUnit");
                    this._PrecioUnit = value;
                    this.SendPropertyChanged("PrecioUnit");
                    this.OnPrecioUnitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"cantidad", Storage = "_Cantidad", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging("Cantidad");
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioTotalPlato in the schema.
        /// </summary>
        [Column(Name = @"precio_total_plato", Storage = "_PrecioTotalPlato", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioTotalPlato
        {
            get
            {
                return this._PrecioTotalPlato;
            }
            set
            {
                if (this._PrecioTotalPlato != value)
                {
                    this.OnPrecioTotalPlatoChanging(value);
                    this.SendPropertyChanging("PrecioTotalPlato");
                    this._PrecioTotalPlato = value;
                    this.SendPropertyChanged("PrecioTotalPlato");
                    this.OnPrecioTotalPlatoChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FMesaResult in the schema.
    /// </summary>
    public partial class FMesaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private System.Nullable<int> _Sillas;

        private System.Nullable<int> _EstadoMesa;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnSillasChanging(System.Nullable<int> value);
        partial void OnSillasChanged();
        partial void OnEstadoMesaChanging(System.Nullable<int> value);
        partial void OnEstadoMesaChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FMesaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Sillas in the schema.
        /// </summary>
        [Column(Name = @"sillas", Storage = "_Sillas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Sillas
        {
            get
            {
                return this._Sillas;
            }
            set
            {
                if (this._Sillas != value)
                {
                    this.OnSillasChanging(value);
                    this.SendPropertyChanging("Sillas");
                    this._Sillas = value;
                    this.SendPropertyChanged("Sillas");
                    this.OnSillasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EstadoMesa in the schema.
        /// </summary>
        [Column(Name = @"estado_mesa", Storage = "_EstadoMesa", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> EstadoMesa
        {
            get
            {
                return this._EstadoMesa;
            }
            set
            {
                if (this._EstadoMesa != value)
                {
                    this.OnEstadoMesaChanging(value);
                    this.SendPropertyChanging("EstadoMesa");
                    this._EstadoMesa = value;
                    this.SendPropertyChanged("EstadoMesa");
                    this.OnEstadoMesaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FOpcionesPlatoResult in the schema.
    /// </summary>
    public partial class FOpcionesPlatoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _NombrePlato;

        private System.Nullable<int> _Cantidad;

        private System.Nullable<int> _PrecioUnit;

        private System.Nullable<int> _PrecioTotal;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombrePlatoChanging(string value);
        partial void OnNombrePlatoChanged();
        partial void OnCantidadChanging(System.Nullable<int> value);
        partial void OnCantidadChanged();
        partial void OnPrecioUnitChanging(System.Nullable<int> value);
        partial void OnPrecioUnitChanged();
        partial void OnPrecioTotalChanging(System.Nullable<int> value);
        partial void OnPrecioTotalChanged();
        #endregion

        public FOpcionesPlatoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombrePlato in the schema.
        /// </summary>
        [Column(Name = @"nombre_plato", Storage = "_NombrePlato", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombrePlato
        {
            get
            {
                return this._NombrePlato;
            }
            set
            {
                if (this._NombrePlato != value)
                {
                    this.OnNombrePlatoChanging(value);
                    this.SendPropertyChanging("NombrePlato");
                    this._NombrePlato = value;
                    this.SendPropertyChanged("NombrePlato");
                    this.OnNombrePlatoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"cantidad", Storage = "_Cantidad", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging("Cantidad");
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioUnit in the schema.
        /// </summary>
        [Column(Name = @"precio_unit", Storage = "_PrecioUnit", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioUnit
        {
            get
            {
                return this._PrecioUnit;
            }
            set
            {
                if (this._PrecioUnit != value)
                {
                    this.OnPrecioUnitChanging(value);
                    this.SendPropertyChanging("PrecioUnit");
                    this._PrecioUnit = value;
                    this.SendPropertyChanged("PrecioUnit");
                    this.OnPrecioUnitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioTotal in the schema.
        /// </summary>
        [Column(Name = @"precio_total", Storage = "_PrecioTotal", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioTotal
        {
            get
            {
                return this._PrecioTotal;
            }
            set
            {
                if (this._PrecioTotal != value)
                {
                    this.OnPrecioTotalChanging(value);
                    this.SendPropertyChanging("PrecioTotal");
                    this._PrecioTotal = value;
                    this.SendPropertyChanged("PrecioTotal");
                    this.OnPrecioTotalChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FClientesCalificacionResult in the schema.
    /// </summary>
    public partial class FClientesCalificacionResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _Clientes;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnClientesChanging(System.Nullable<int> value);
        partial void OnClientesChanged();
        #endregion

        public FClientesCalificacionResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Clientes in the schema.
        /// </summary>
        [Column(Name = @"clientes", Storage = "_Clientes", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> Clientes
        {
            get
            {
                return this._Clientes;
            }
            set
            {
                if (this._Clientes != value)
                {
                    this.OnClientesChanging(value);
                    this.SendPropertyChanging("Clientes");
                    this._Clientes = value;
                    this.SendPropertyChanged("Clientes");
                    this.OnClientesChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FInsertarIngrePlaResult in the schema.
    /// </summary>
    public partial class FInsertarIngrePlaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<int> _PlatoId;

        private System.Nullable<int> _IngredienteId;

        private System.Nullable<double> _Cantidad;

        private System.Nullable<long> _Id;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnPlatoIdChanging(System.Nullable<int> value);
        partial void OnPlatoIdChanged();
        partial void OnIngredienteIdChanging(System.Nullable<int> value);
        partial void OnIngredienteIdChanged();
        partial void OnCantidadChanging(System.Nullable<double> value);
        partial void OnCantidadChanged();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FInsertarIngrePlaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for PlatoId in the schema.
        /// </summary>
        [Column(Name = @"plato_id", Storage = "_PlatoId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PlatoId
        {
            get
            {
                return this._PlatoId;
            }
            set
            {
                if (this._PlatoId != value)
                {
                    this.OnPlatoIdChanging(value);
                    this.SendPropertyChanging("PlatoId");
                    this._PlatoId = value;
                    this.SendPropertyChanged("PlatoId");
                    this.OnPlatoIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IngredienteId in the schema.
        /// </summary>
        [Column(Name = @"ingrediente_id", Storage = "_IngredienteId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> IngredienteId
        {
            get
            {
                return this._IngredienteId;
            }
            set
            {
                if (this._IngredienteId != value)
                {
                    this.OnIngredienteIdChanging(value);
                    this.SendPropertyChanging("IngredienteId");
                    this._IngredienteId = value;
                    this.SendPropertyChanged("IngredienteId");
                    this.OnIngredienteIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"cantidad", Storage = "_Cantidad", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging("Cantidad");
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FLoginResult in the schema.
    /// </summary>
    public partial class FLoginResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _Nombre;

        private string _Clave;

        private System.Nullable<int> _RolId;

        private System.Nullable<int> _EstadoReserva;

        private System.Nullable<int> _EstadoUsuario;

        private System.Nullable<int> _SesionesActivas;

        private System.Nullable<int> _NumeroIntentos;

        private System.Nullable<System.DateTime> _FechaDesbloqueo;

        private System.Nullable<System.DateTime> _Fecha;

        private System.Nullable<System.TimeSpan> _HSal;

        private System.Nullable<long> _IdReserva;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombreChanging(string value);
        partial void OnNombreChanged();
        partial void OnClaveChanging(string value);
        partial void OnClaveChanged();
        partial void OnRolIdChanging(System.Nullable<int> value);
        partial void OnRolIdChanged();
        partial void OnEstadoReservaChanging(System.Nullable<int> value);
        partial void OnEstadoReservaChanged();
        partial void OnEstadoUsuarioChanging(System.Nullable<int> value);
        partial void OnEstadoUsuarioChanged();
        partial void OnSesionesActivasChanging(System.Nullable<int> value);
        partial void OnSesionesActivasChanged();
        partial void OnNumeroIntentosChanging(System.Nullable<int> value);
        partial void OnNumeroIntentosChanged();
        partial void OnFechaDesbloqueoChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaDesbloqueoChanged();
        partial void OnFechaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
        partial void OnHSalChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHSalChanged();
        partial void OnIdReservaChanging(System.Nullable<long> value);
        partial void OnIdReservaChanged();
        #endregion

        public FLoginResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [Column(Name = @"nombre", Storage = "_Nombre", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Nombre
        {
            get
            {
                return this._Nombre;
            }
            set
            {
                if (this._Nombre != value)
                {
                    this.OnNombreChanging(value);
                    this.SendPropertyChanging("Nombre");
                    this._Nombre = value;
                    this.SendPropertyChanged("Nombre");
                    this.OnNombreChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Clave in the schema.
        /// </summary>
        [Column(Name = @"clave", Storage = "_Clave", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Clave
        {
            get
            {
                return this._Clave;
            }
            set
            {
                if (this._Clave != value)
                {
                    this.OnClaveChanging(value);
                    this.SendPropertyChanging("Clave");
                    this._Clave = value;
                    this.SendPropertyChanged("Clave");
                    this.OnClaveChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RolId in the schema.
        /// </summary>
        [Column(Name = @"rol_id", Storage = "_RolId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> RolId
        {
            get
            {
                return this._RolId;
            }
            set
            {
                if (this._RolId != value)
                {
                    this.OnRolIdChanging(value);
                    this.SendPropertyChanging("RolId");
                    this._RolId = value;
                    this.SendPropertyChanged("RolId");
                    this.OnRolIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EstadoReserva in the schema.
        /// </summary>
        [Column(Name = @"estado_reserva", Storage = "_EstadoReserva", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> EstadoReserva
        {
            get
            {
                return this._EstadoReserva;
            }
            set
            {
                if (this._EstadoReserva != value)
                {
                    this.OnEstadoReservaChanging(value);
                    this.SendPropertyChanging("EstadoReserva");
                    this._EstadoReserva = value;
                    this.SendPropertyChanged("EstadoReserva");
                    this.OnEstadoReservaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EstadoUsuario in the schema.
        /// </summary>
        [Column(Name = @"estado_usuario", Storage = "_EstadoUsuario", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> EstadoUsuario
        {
            get
            {
                return this._EstadoUsuario;
            }
            set
            {
                if (this._EstadoUsuario != value)
                {
                    this.OnEstadoUsuarioChanging(value);
                    this.SendPropertyChanging("EstadoUsuario");
                    this._EstadoUsuario = value;
                    this.SendPropertyChanged("EstadoUsuario");
                    this.OnEstadoUsuarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SesionesActivas in the schema.
        /// </summary>
        [Column(Name = @"sesiones_activas", Storage = "_SesionesActivas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> SesionesActivas
        {
            get
            {
                return this._SesionesActivas;
            }
            set
            {
                if (this._SesionesActivas != value)
                {
                    this.OnSesionesActivasChanging(value);
                    this.SendPropertyChanging("SesionesActivas");
                    this._SesionesActivas = value;
                    this.SendPropertyChanged("SesionesActivas");
                    this.OnSesionesActivasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumeroIntentos in the schema.
        /// </summary>
        [Column(Name = @"numero_intentos", Storage = "_NumeroIntentos", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> NumeroIntentos
        {
            get
            {
                return this._NumeroIntentos;
            }
            set
            {
                if (this._NumeroIntentos != value)
                {
                    this.OnNumeroIntentosChanging(value);
                    this.SendPropertyChanging("NumeroIntentos");
                    this._NumeroIntentos = value;
                    this.SendPropertyChanged("NumeroIntentos");
                    this.OnNumeroIntentosChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FechaDesbloqueo in the schema.
        /// </summary>
        [Column(Name = @"fecha_desbloqueo", Storage = "_FechaDesbloqueo", DbType = "TIMESTAMP", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaDesbloqueo
        {
            get
            {
                return this._FechaDesbloqueo;
            }
            set
            {
                if (this._FechaDesbloqueo != value)
                {
                    this.OnFechaDesbloqueoChanging(value);
                    this.SendPropertyChanging("FechaDesbloqueo");
                    this._FechaDesbloqueo = value;
                    this.SendPropertyChanged("FechaDesbloqueo");
                    this.OnFechaDesbloqueoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"fecha", Storage = "_Fecha", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HSal in the schema.
        /// </summary>
        [Column(Name = @"h_sal", Storage = "_HSal", DbType = "TIME", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HSal
        {
            get
            {
                return this._HSal;
            }
            set
            {
                if (this._HSal != value)
                {
                    this.OnHSalChanging(value);
                    this.SendPropertyChanging("HSal");
                    this._HSal = value;
                    this.SendPropertyChanged("HSal");
                    this.OnHSalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for IdReserva in the schema.
        /// </summary>
        [Column(Name = @"id_reserva", Storage = "_IdReserva", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> IdReserva
        {
            get
            {
                return this._IdReserva;
            }
            set
            {
                if (this._IdReserva != value)
                {
                    this.OnIdReservaChanging(value);
                    this.SendPropertyChanging("IdReserva");
                    this._IdReserva = value;
                    this.SendPropertyChanged("IdReserva");
                    this.OnIdReservaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FOpcionesReservaResult in the schema.
    /// </summary>
    public partial class FOpcionesReservaResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private System.Nullable<int> _UserId;

        private System.Nullable<int> _CantPersonas;

        private System.Nullable<int> _MesaId;

        private System.Nullable<int> _PrecioTotal;

        private System.Nullable<int> _TipoId;

        private System.Nullable<System.DateTime> _Fecha;

        private System.Nullable<System.TimeSpan> _HIni;

        private System.Nullable<System.TimeSpan> _HSal;

        private System.Nullable<int> _ModifiedBy;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnUserIdChanging(System.Nullable<int> value);
        partial void OnUserIdChanged();
        partial void OnCantPersonasChanging(System.Nullable<int> value);
        partial void OnCantPersonasChanged();
        partial void OnMesaIdChanging(System.Nullable<int> value);
        partial void OnMesaIdChanged();
        partial void OnPrecioTotalChanging(System.Nullable<int> value);
        partial void OnPrecioTotalChanged();
        partial void OnTipoIdChanging(System.Nullable<int> value);
        partial void OnTipoIdChanged();
        partial void OnFechaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
        partial void OnHIniChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHIniChanged();
        partial void OnHSalChanging(System.Nullable<System.TimeSpan> value);
        partial void OnHSalChanged();
        partial void OnModifiedByChanging(System.Nullable<int> value);
        partial void OnModifiedByChanged();
        #endregion

        public FOpcionesReservaResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for UserId in the schema.
        /// </summary>
        [Column(Name = @"user_id", Storage = "_UserId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.OnUserIdChanging(value);
                    this.SendPropertyChanging("UserId");
                    this._UserId = value;
                    this.SendPropertyChanged("UserId");
                    this.OnUserIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CantPersonas in the schema.
        /// </summary>
        [Column(Name = @"cant_personas", Storage = "_CantPersonas", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> CantPersonas
        {
            get
            {
                return this._CantPersonas;
            }
            set
            {
                if (this._CantPersonas != value)
                {
                    this.OnCantPersonasChanging(value);
                    this.SendPropertyChanging("CantPersonas");
                    this._CantPersonas = value;
                    this.SendPropertyChanged("CantPersonas");
                    this.OnCantPersonasChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MesaId in the schema.
        /// </summary>
        [Column(Name = @"mesa_id", Storage = "_MesaId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> MesaId
        {
            get
            {
                return this._MesaId;
            }
            set
            {
                if (this._MesaId != value)
                {
                    this.OnMesaIdChanging(value);
                    this.SendPropertyChanging("MesaId");
                    this._MesaId = value;
                    this.SendPropertyChanged("MesaId");
                    this.OnMesaIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PrecioTotal in the schema.
        /// </summary>
        [Column(Name = @"precio_total", Storage = "_PrecioTotal", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> PrecioTotal
        {
            get
            {
                return this._PrecioTotal;
            }
            set
            {
                if (this._PrecioTotal != value)
                {
                    this.OnPrecioTotalChanging(value);
                    this.SendPropertyChanging("PrecioTotal");
                    this._PrecioTotal = value;
                    this.SendPropertyChanged("PrecioTotal");
                    this.OnPrecioTotalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoId in the schema.
        /// </summary>
        [Column(Name = @"tipo_id", Storage = "_TipoId", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> TipoId
        {
            get
            {
                return this._TipoId;
            }
            set
            {
                if (this._TipoId != value)
                {
                    this.OnTipoIdChanging(value);
                    this.SendPropertyChanging("TipoId");
                    this._TipoId = value;
                    this.SendPropertyChanged("TipoId");
                    this.OnTipoIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [Column(Name = @"fecha", Storage = "_Fecha", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> Fecha
        {
            get
            {
                return this._Fecha;
            }
            set
            {
                if (this._Fecha != value)
                {
                    this.OnFechaChanging(value);
                    this.SendPropertyChanging("Fecha");
                    this._Fecha = value;
                    this.SendPropertyChanged("Fecha");
                    this.OnFechaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HIni in the schema.
        /// </summary>
        [Column(Name = @"h_ini", Storage = "_HIni", DbType = "TIME WITH TIME ZONE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HIni
        {
            get
            {
                return this._HIni;
            }
            set
            {
                if (this._HIni != value)
                {
                    this.OnHIniChanging(value);
                    this.SendPropertyChanging("HIni");
                    this._HIni = value;
                    this.SendPropertyChanged("HIni");
                    this.OnHIniChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HSal in the schema.
        /// </summary>
        [Column(Name = @"h_sal", Storage = "_HSal", DbType = "TIME WITH TIME ZONE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.TimeSpan> HSal
        {
            get
            {
                return this._HSal;
            }
            set
            {
                if (this._HSal != value)
                {
                    this.OnHSalChanging(value);
                    this.SendPropertyChanging("HSal");
                    this._HSal = value;
                    this.SendPropertyChanged("HSal");
                    this.OnHSalChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ModifiedBy in the schema.
        /// </summary>
        [Column(Name = @"modified_by", Storage = "_ModifiedBy", DbType = "INT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<int> ModifiedBy
        {
            get
            {
                return this._ModifiedBy;
            }
            set
            {
                if (this._ModifiedBy != value)
                {
                    this.OnModifiedByChanging(value);
                    this.SendPropertyChanging("ModifiedBy");
                    this._ModifiedBy = value;
                    this.SendPropertyChanged("ModifiedBy");
                    this.OnModifiedByChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FUsuarioDisponibleResult in the schema.
    /// </summary>
    public partial class FUsuarioDisponibleResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Disponible;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnDisponibleChanging(System.Nullable<long> value);
        partial void OnDisponibleChanged();
        #endregion

        public FUsuarioDisponibleResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Disponible in the schema.
        /// </summary>
        [Column(Name = @"disponible", Storage = "_Disponible", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Disponible
        {
            get
            {
                return this._Disponible;
            }
            set
            {
                if (this._Disponible != value)
                {
                    this.OnDisponibleChanging(value);
                    this.SendPropertyChanging("Disponible");
                    this._Disponible = value;
                    this.SendPropertyChanged("Disponible");
                    this.OnDisponibleChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FMostrarPlaIngreResult in the schema.
    /// </summary>
    public partial class FMostrarPlaIngreResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<long> _Id;

        private string _NombrePlato;

        private string _NombreIngrediente;

        private System.Nullable<double> _Cantidad;

        private string _Unidad;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(System.Nullable<long> value);
        partial void OnIdChanged();
        partial void OnNombrePlatoChanging(string value);
        partial void OnNombrePlatoChanged();
        partial void OnNombreIngredienteChanging(string value);
        partial void OnNombreIngredienteChanged();
        partial void OnCantidadChanging(System.Nullable<double> value);
        partial void OnCantidadChanged();
        partial void OnUnidadChanging(string value);
        partial void OnUnidadChanged();
        #endregion

        public FMostrarPlaIngreResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", DbType = "BIGINT", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<long> Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging("Id");
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombrePlato in the schema.
        /// </summary>
        [Column(Name = @"nombre_plato", Storage = "_NombrePlato", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombrePlato
        {
            get
            {
                return this._NombrePlato;
            }
            set
            {
                if (this._NombrePlato != value)
                {
                    this.OnNombrePlatoChanging(value);
                    this.SendPropertyChanging("NombrePlato");
                    this._NombrePlato = value;
                    this.SendPropertyChanged("NombrePlato");
                    this.OnNombrePlatoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NombreIngrediente in the schema.
        /// </summary>
        [Column(Name = @"nombre_ingrediente", Storage = "_NombreIngrediente", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NombreIngrediente
        {
            get
            {
                return this._NombreIngrediente;
            }
            set
            {
                if (this._NombreIngrediente != value)
                {
                    this.OnNombreIngredienteChanging(value);
                    this.SendPropertyChanging("NombreIngrediente");
                    this._NombreIngrediente = value;
                    this.SendPropertyChanged("NombreIngrediente");
                    this.OnNombreIngredienteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cantidad in the schema.
        /// </summary>
        [Column(Name = @"cantidad", Storage = "_Cantidad", DbType = "DOUBLE PRECISION", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<double> Cantidad
        {
            get
            {
                return this._Cantidad;
            }
            set
            {
                if (this._Cantidad != value)
                {
                    this.OnCantidadChanging(value);
                    this.SendPropertyChanging("Cantidad");
                    this._Cantidad = value;
                    this.SendPropertyChanged("Cantidad");
                    this.OnCantidadChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Unidad in the schema.
        /// </summary>
        [Column(Name = @"unidad", Storage = "_Unidad", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Unidad
        {
            get
            {
                return this._Unidad;
            }
            set
            {
                if (this._Unidad != value)
                {
                    this.OnUnidadChanging(value);
                    this.SendPropertyChanging("Unidad");
                    this._Unidad = value;
                    this.SendPropertyChanged("Unidad");
                    this.OnUnidadChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for FAgendumResult in the schema.
    /// </summary>
    public partial class FAgendumResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<System.DateTime> _FechaReserva;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnFechaReservaChanging(System.Nullable<System.DateTime> value);
        partial void OnFechaReservaChanged();
        #endregion

        public FAgendumResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for FechaReserva in the schema.
        /// </summary>
        [Column(Name = @"fecha_reserva", Storage = "_FechaReserva", DbType = "DATE", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> FechaReserva
        {
            get
            {
                return this._FechaReserva;
            }
            set
            {
                if (this._FechaReserva != value)
                {
                    this.OnFechaReservaChanging(value);
                    this.SendPropertyChanging("FechaReserva");
                    this._FechaReserva = value;
                    this.SendPropertyChanged("FechaReserva");
                    this.OnFechaReservaChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
